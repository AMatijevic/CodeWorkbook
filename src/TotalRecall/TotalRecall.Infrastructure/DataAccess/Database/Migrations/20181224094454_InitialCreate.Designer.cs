// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TotalRecall.Infrastructure.DataAccess.Database;

namespace TotalRecall.Infrastructure.DataAccess.Database.Migrations
{
    [DbContext(typeof(TotalRecallDbContext))]
    [Migration("20181224094454_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("TotalRecall.Core.Entities.Cell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Complexity");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<DateTime>("Edited");

                    b.Property<int>("Importance");

                    b.Property<int?>("MemoryId");

                    b.Property<double>("TimeEstimate");

                    b.Property<string>("Title");

                    b.Property<int>("Type");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("MemoryId");

                    b.HasIndex("Title");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("TotalRecall.Core.Entities.Memory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<DateTime>("Edited");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Memories");
                });

            modelBuilder.Entity("TotalRecall.Core.Entities.Summary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CellId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<DateTime>("Edited");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("CellId");

                    b.ToTable("Summaries");
                });

            modelBuilder.Entity("TotalRecall.Core.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CellId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<DateTime>("Edited");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CellId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TotalRecall.Core.Entities.Cell", b =>
                {
                    b.HasOne("TotalRecall.Core.Entities.Memory")
                        .WithMany("Cells")
                        .HasForeignKey("MemoryId");

                    b.OwnsOne("TotalRecall.Core.Entities.Length", "Length", b1 =>
                        {
                            b1.Property<int>("CellId");

                            b1.Property<float>("Amount");

                            b1.Property<int>("Unit");

                            b1.HasKey("CellId");

                            b1.ToTable("Cells");

                            b1.HasOne("TotalRecall.Core.Entities.Cell")
                                .WithOne("Length")
                                .HasForeignKey("TotalRecall.Core.Entities.Length", "CellId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("TotalRecall.Core.Entities.Summary", b =>
                {
                    b.HasOne("TotalRecall.Core.Entities.Cell")
                        .WithMany("Summarys")
                        .HasForeignKey("CellId");
                });

            modelBuilder.Entity("TotalRecall.Core.Entities.Tag", b =>
                {
                    b.HasOne("TotalRecall.Core.Entities.Cell")
                        .WithMany("Tags")
                        .HasForeignKey("CellId");
                });
#pragma warning restore 612, 618
        }
    }
}
